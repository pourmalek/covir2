{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/Users/farshadpourmalek/Downloads/covir2-main/20210910/code/JOHN/log country JOHN.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}10 Sep 2021, 16:50:42
{txt}
{com}. 
. ***************************************************************************
. * This is "do country JOHN.do"
. 
. * Project: CovidVisualized country - countries without subnational estimates
. * Person: Farshad Pourmalek pourmalek_farshad@yahoo.com
. * Time (initial): 2021-02-10
. 
. * OBJECTIVE: Get and prepare Johns Hopkins data for country
. ***************************************************************************
. 
. 
. 
. * get Johns Hopkins data for deaths
. 
. 
. import delimited ///
> "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv" ///
> , clear varnames(1) colrange(2:2)
{res}{text}(1 var, 279 obs)

{com}. 
. save "time_series_covid19_deaths_global col 2.dta", replace
{txt}file time_series_covid19_deaths_global col 2.dta saved

{com}. 
. 
. import delimited ///
> "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv" ///
> , clear varnames(1) colrange(5)
{res}{text}(597 vars, 279 obs)

{com}. 
. 
. save "time_series_covid19_deaths_global col 5 on.dta", replace
{txt}file time_series_covid19_deaths_global col 5 on.dta saved

{com}. 
. 
. use "time_series_covid19_deaths_global col 2.dta", clear 
{txt}
{com}. 
. merge 1:1 _n using "time_series_covid19_deaths_global col 5 on.dta"
{res}
{txt}{col 5}Result{col 38}# of obs.
{col 5}{hline 41}
{col 5}not matched{col 30}{res}               0
{txt}{col 5}matched{col 30}{res}             279{txt}  (_merge==3)
{col 5}{hline 41}

{com}. 
. 
. rename countryregion loc_grand_name
{res}{txt}
{com}. 
. label var loc_grand_name "location grand name"
{txt}
{com}. 
. keep if regexm(loc_grand_name,"$country") == 1
{txt}(278 observations deleted)

{com}. 
. order loc_grand_name, last
{txt}
{com}. 
. gen counter = _n
{txt}
{com}. 
. reshape long v, i(counter) 
{txt}(note: j

Data{col 36}wide{col 43}->{col 48}long
{hline 77}
Number of obs.                 {res}       1   {txt}->{res}     597
{txt}Number of variables            {res}     600   {txt}->{res}       5
{txt}j variable (597 values)                   ->   {res}_j
{txt}xij variables:
                         {res}v1 v2 ... v597   {txt}->   {res}v
{txt}{hline 77}

{com}. 
. drop counter 
{txt}
{com}. 
. codebook _j

{txt}{hline}
{res}_j{right:(unlabeled)}
{txt}{hline}

{col 19}type:  numeric ({res}int{txt})

{col 18}range:  [{res}1{txt},{res}597{txt}]{col 55}units:  {res}1
{col 10}{txt}unique values:  {res}597{col 51}{txt}missing .:  {res}0{txt}/{res}597

{txt}{col 19}mean:{res}{col 26}     299
{txt}{col 15}std. dev:{res}{col 26} 172.483

{txt}{col 12}percentiles:{col 32}10%{col 42}25%{col 52}50%{col 62}75%{col 72}90%
{res}{col 27}      60{col 37}     150{col 47}     299{col 57}     448{col 67}     538
{txt}
{com}. 
. // replace _j = _j - 4 // compensate for first vars in the original file
. 
. gen date = date("22 Jan 2020", "DMY")
{txt}
{com}. 
. replace date = date + _j - 1
{txt}(596 real changes made)

{com}. 
. format date %td
{txt}
{com}. 
. codebook date

{txt}{hline}
{res}date{right:(unlabeled)}
{txt}{hline}

{col 19}type:  numeric daily date ({res}float{txt})

{col 18}range:  [{res}21936{txt},{res}22532{txt}]{col 55}units:  {res}1
{col 8}{txt}or equivalently:  [{res}22jan2020{txt},{res}09sep2021{txt}]{col 55}units:  {res}days
{col 10}{txt}unique values:  {res}597{col 51}{txt}missing .:  {res}0{txt}/{res}597

{txt}{col 19}mean:{res}{col 26}   22234{txt} = {res}15nov2020{txt}
{col 15}std. dev:{res}{col 26} 172.483

{txt}{col 12}percentiles:{col 32}10%{col 42}25%{col 52}50%{col 62}75%{col 72}90%
{res}{col 27}   21995{col 37}   22085{col 47}   22234{col 57}   22383{col 67}   22473
{col 26}21mar2020{col 36}19jun2020{col 46}15nov2020{col 56}13apr2021{col 66}12jul2021
{txt}
{com}. 
. order date 
{txt}
{com}. 
. rename v TotDeaMeRaA00S00
{res}{txt}
{com}. 
. label var TotDeaMeRaA00S00 "Total Deaths JOHN"
{txt}
{com}. 
. destring TotDeaMeRaA00S00, replace
{txt}TotDeaMeRaA00S00: all characters numeric; {res}replaced {txt}as {res}long
{txt}
{com}. 
. list TotDeaMeRaA00S00 if date == td(19feb2020) // Shoule be 2
{txt}
     {c TLC}{hline 10}{c TRC}
     {c |} {res}TotDe~00 {txt}{c |}
     {c LT}{hline 10}{c RT}
 29. {c |} {res}       2 {txt}{c |}
     {c BLC}{hline 10}{c BRC}

{com}. 
. gen DayDeaMeRaA00S00 =  TotDeaMeRaA00S00[_n] - TotDeaMeRaA00S00[_n-1]
{txt}(1 missing value generated)

{com}. 
. label var DayDeaMeRaA00S00 "Daily Deaths JOHN"
{txt}
{com}. 
. replace DayDeaMeRaA00S00 = TotDeaMeRaA00S00 if _j == 1
{txt}(1 real change made)

{com}. 
. replace TotDeaMeRaA00S00 = . if date < td(19feb2020)
{txt}(28 real changes made, 28 to missing)

{com}. 
. replace DayDeaMeRaA00S00 = . if date < td(19feb2020)
{txt}(28 real changes made, 28 to missing)

{com}. 
. drop _j _merge
{txt}
{com}. 
. 
. 
. gen DayDeaMeRaA00S00_CF2 = DayDeaMeRaA00S00 * 2
{txt}(28 missing values generated)

{com}. 
. label var DayDeaMeRaA00S00_CF2 "Daily Deaths JOHN correction factor 2"
{txt}
{com}. 
. gen DayDeaMeRaA00S00_CF5 = DayDeaMeRaA00S00 * 5
{txt}(28 missing values generated)

{com}. 
. label var DayDeaMeRaA00S00_CF5 "Daily Deaths JOHN correction factor 5"
{txt}
{com}. 
. gen TotDeaMeRaA00S00_CF2 = TotDeaMeRaA00S00 * 2
{txt}(28 missing values generated)

{com}. 
. label var TotDeaMeRaA00S00_CF2 "Total Deaths JOHN correction factor 2"
{txt}
{com}. 
. gen TotDeaMeRaA00S00_CF5 = TotDeaMeRaA00S00 * 5
{txt}(28 missing values generated)

{com}. 
. label var TotDeaMeRaA00S00_CF5 "Total Deaths JOHN correction factor 5"
{txt}
{com}. 
. 
. 
. order date loc_grand_name DayDeaMeRaA00S00 TotDeaMeRaA00S00 DayDeaMeRaA00S00_CF2 DayDeaMeRaA00S00_CF5 TotDeaMeRaA00S00_CF2 TotDeaMeRaA00S00_CF5
{txt}
{com}.                                         
. 
. sort date
{txt}
{com}. 
. save "country JOHN deaths.dta", replace
{txt}file country JOHN deaths.dta saved

{com}. 
. 
. 
. 
. 
. 
. 
. 
. 
. * get Johns Hopkins data for cases
. 
. 
. import delimited using ///
> "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv" ///
> , clear varnames(1) colrange(2:2)
{res}{text}(1 var, 279 obs)

{com}. 
. save "time_series_covid19_confirmed_global col 2.dta", replace
{txt}file time_series_covid19_confirmed_global col 2.dta saved

{com}. 
. 
. import delimited using ///
> "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv" ///
> , clear varnames(1) colrange(5)
{res}{text}(597 vars, 279 obs)

{com}. 
. save "time_series_covid19_confirmed_global col 5 on.dta", replace
{txt}file time_series_covid19_confirmed_global col 5 on.dta saved

{com}. 
. 
. use "time_series_covid19_confirmed_global col 2.dta", clear 
{txt}
{com}. 
. merge 1:1 _n using "time_series_covid19_confirmed_global col 5 on.dta"
{res}
{txt}{col 5}Result{col 38}# of obs.
{col 5}{hline 41}
{col 5}not matched{col 30}{res}               0
{txt}{col 5}matched{col 30}{res}             279{txt}  (_merge==3)
{col 5}{hline 41}

{com}. 
. 
. rename countryregion loc_grand_name
{res}{txt}
{com}. 
. keep if regexm(loc_grand_name,"$country") == 1
{txt}(278 observations deleted)

{com}. 
. order loc_grand_name, last
{txt}
{com}. 
. gen counter = _n
{txt}
{com}. 
. reshape long v, i(counter) 
{txt}(note: j

Data{col 36}wide{col 43}->{col 48}long
{hline 77}
Number of obs.                 {res}       1   {txt}->{res}     597
{txt}Number of variables            {res}     600   {txt}->{res}       5
{txt}j variable (597 values)                   ->   {res}_j
{txt}xij variables:
                         {res}v1 v2 ... v597   {txt}->   {res}v
{txt}{hline 77}

{com}. 
. drop counter 
{txt}
{com}. 
. codebook _j

{txt}{hline}
{res}_j{right:(unlabeled)}
{txt}{hline}

{col 19}type:  numeric ({res}int{txt})

{col 18}range:  [{res}1{txt},{res}597{txt}]{col 55}units:  {res}1
{col 10}{txt}unique values:  {res}597{col 51}{txt}missing .:  {res}0{txt}/{res}597

{txt}{col 19}mean:{res}{col 26}     299
{txt}{col 15}std. dev:{res}{col 26} 172.483

{txt}{col 12}percentiles:{col 32}10%{col 42}25%{col 52}50%{col 62}75%{col 72}90%
{res}{col 27}      60{col 37}     150{col 47}     299{col 57}     448{col 67}     538
{txt}
{com}. 
. gen date = date("22 Jan 2020", "DMY")
{txt}
{com}. 
. replace date = date + _j - 1
{txt}(596 real changes made)

{com}. 
. format date %td
{txt}
{com}. 
. codebook date

{txt}{hline}
{res}date{right:(unlabeled)}
{txt}{hline}

{col 19}type:  numeric daily date ({res}float{txt})

{col 18}range:  [{res}21936{txt},{res}22532{txt}]{col 55}units:  {res}1
{col 8}{txt}or equivalently:  [{res}22jan2020{txt},{res}09sep2021{txt}]{col 55}units:  {res}days
{col 10}{txt}unique values:  {res}597{col 51}{txt}missing .:  {res}0{txt}/{res}597

{txt}{col 19}mean:{res}{col 26}   22234{txt} = {res}15nov2020{txt}
{col 15}std. dev:{res}{col 26} 172.483

{txt}{col 12}percentiles:{col 32}10%{col 42}25%{col 52}50%{col 62}75%{col 72}90%
{res}{col 27}   21995{col 37}   22085{col 47}   22234{col 57}   22383{col 67}   22473
{col 26}21mar2020{col 36}19jun2020{col 46}15nov2020{col 56}13apr2021{col 66}12jul2021
{txt}
{com}. 
. order date 
{txt}
{com}. 
. rename v TotCasMeRaA00S00
{res}{txt}
{com}. 
. label var TotCasMeRaA00S00 "Total Cases JOHN"
{txt}
{com}. 
. destring TotCasMeRaA00S00, replace
{txt}TotCasMeRaA00S00: all characters numeric; {res}replaced {txt}as {res}long
{txt}
{com}. 
. gen DayCasMeRaA00S00 =  TotCasMeRaA00S00[_n] - TotCasMeRaA00S00[_n-1]
{txt}(1 missing value generated)

{com}. 
. label var DayCasMeRaA00S00 "Daily Cases JOHN"
{txt}
{com}. 
. replace DayCasMeRaA00S00 = TotCasMeRaA00S00 if _j == 1
{txt}(1 real change made)

{com}. 
. replace TotCasMeRaA00S00 = . if date < td(19feb2020)
{txt}(28 real changes made, 28 to missing)

{com}. 
. replace DayCasMeRaA00S00 = . if date < td(19feb2020)
{txt}(28 real changes made, 28 to missing)

{com}. 
. drop _j _merge
{txt}
{com}. 
. 
. gen DayCasMeRaA00S00_CF2 = DayCasMeRaA00S00 * 2
{txt}(28 missing values generated)

{com}. 
. label var DayCasMeRaA00S00_CF2 "Daily Cases JOHN correction factor 2"
{txt}
{com}. 
. gen DayCasMeRaA00S00_CF5 = DayCasMeRaA00S00 * 5
{txt}(28 missing values generated)

{com}. 
. label var DayCasMeRaA00S00_CF5 "Daily Cases JOHN correction factor 5"
{txt}
{com}. 
. gen TotCasMeRaA00S00_CF2 = TotCasMeRaA00S00 * 2
{txt}(28 missing values generated)

{com}. 
. label var TotCasMeRaA00S00_CF2 "Total Cases JOHN correction factor 2"
{txt}
{com}. 
. gen TotCasMeRaA00S00_CF5 = TotCasMeRaA00S00 * 5
{txt}(28 missing values generated)

{com}. 
. label var TotCasMeRaA00S00_CF5 "Total Cases JOHN correction factor 5"
{txt}
{com}. 
. 
. order date loc_grand_name DayCasMeRaA00S00 TotCasMeRaA00S00 DayCasMeRaA00S00_CF2 DayCasMeRaA00S00_CF5 TotCasMeRaA00S00_CF2 TotCasMeRaA00S00_CF5
{txt}
{com}. 
. sort date
{txt}
{com}. 
. compress
  {txt}variable {bf}date{sf} was {bf}{res}float{sf}{txt} now {bf}{res}int{sf}
  {txt}variable {bf}loc_grand_name{sf} was {bf}{res}str32{sf}{txt} now {bf}{res}str4{sf}
{txt}  (17,910 bytes saved)

{com}. 
. save "country JOHN Cases.dta", replace
{txt}file country JOHN Cases.dta saved

{com}. 
. 
. 
. 
. 
. 
. 
. 
. * get Johns Hopkins data for recovered
. 
. import delimited ///
> "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_recovered_global.csv" ///
> , clear varnames(1) colrange(2:2)
{res}{text}(1 var, 264 obs)

{com}. 
. save "time_series_covid19_recovered_global col 2.dta", replace
{txt}file time_series_covid19_recovered_global col 2.dta saved

{com}. 
. 
. import delimited ///
> "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_recovered_global.csv" ///
> , clear varnames(1) colrange(5)
{res}{text}(597 vars, 264 obs)

{com}. 
. save "time_series_covid19_recovered_global col 5 on.dta", replace
{txt}file time_series_covid19_recovered_global col 5 on.dta saved

{com}. 
. 
. use "time_series_covid19_recovered_global col 2.dta", clear 
{txt}
{com}. 
. merge 1:1 _n using "time_series_covid19_recovered_global col 5 on.dta"
{res}
{txt}{col 5}Result{col 38}# of obs.
{col 5}{hline 41}
{col 5}not matched{col 30}{res}               0
{txt}{col 5}matched{col 30}{res}             264{txt}  (_merge==3)
{col 5}{hline 41}

{com}. 
. 
. rename countryregion loc_grand_name
{res}{txt}
{com}. 
. keep if regexm(loc_grand_name,"$country") == 1
{txt}(263 observations deleted)

{com}. 
. order loc_grand_name, last
{txt}
{com}. 
. 
. gen counter = _n
{txt}
{com}. 
. reshape long v, i(counter) 
{txt}(note: j

Data{col 36}wide{col 43}->{col 48}long
{hline 77}
Number of obs.                 {res}       1   {txt}->{res}     597
{txt}Number of variables            {res}     600   {txt}->{res}       5
{txt}j variable (597 values)                   ->   {res}_j
{txt}xij variables:
                         {res}v1 v2 ... v597   {txt}->   {res}v
{txt}{hline 77}

{com}. 
. drop counter 
{txt}
{com}. 
. codebook _j

{txt}{hline}
{res}_j{right:(unlabeled)}
{txt}{hline}

{col 19}type:  numeric ({res}int{txt})

{col 18}range:  [{res}1{txt},{res}597{txt}]{col 55}units:  {res}1
{col 10}{txt}unique values:  {res}597{col 51}{txt}missing .:  {res}0{txt}/{res}597

{txt}{col 19}mean:{res}{col 26}     299
{txt}{col 15}std. dev:{res}{col 26} 172.483

{txt}{col 12}percentiles:{col 32}10%{col 42}25%{col 52}50%{col 62}75%{col 72}90%
{res}{col 27}      60{col 37}     150{col 47}     299{col 57}     448{col 67}     538
{txt}
{com}. 
. 
. gen date = date("22 Jan 2020", "DMY")
{txt}
{com}. 
. replace date = date + _j - 1
{txt}(596 real changes made)

{com}. 
. format date %td
{txt}
{com}. 
. codebook date

{txt}{hline}
{res}date{right:(unlabeled)}
{txt}{hline}

{col 19}type:  numeric daily date ({res}float{txt})

{col 18}range:  [{res}21936{txt},{res}22532{txt}]{col 55}units:  {res}1
{col 8}{txt}or equivalently:  [{res}22jan2020{txt},{res}09sep2021{txt}]{col 55}units:  {res}days
{col 10}{txt}unique values:  {res}597{col 51}{txt}missing .:  {res}0{txt}/{res}597

{txt}{col 19}mean:{res}{col 26}   22234{txt} = {res}15nov2020{txt}
{col 15}std. dev:{res}{col 26} 172.483

{txt}{col 12}percentiles:{col 32}10%{col 42}25%{col 52}50%{col 62}75%{col 72}90%
{res}{col 27}   21995{col 37}   22085{col 47}   22234{col 57}   22383{col 67}   22473
{col 26}21mar2020{col 36}19jun2020{col 46}15nov2020{col 56}13apr2021{col 66}12jul2021
{txt}
{com}. 
. order date 
{txt}
{com}. 
. rename v TotRecMeRaA00S00
{res}{txt}
{com}. 
. label var TotRecMeRaA00S00 "Total RECovered JOHN"
{txt}
{com}. 
. destring TotRecMeRaA00S00, replace
{txt}TotRecMeRaA00S00: all characters numeric; {res}replaced {txt}as {res}long
{txt}
{com}. 
. list TotRecMeRaA00S00 if date == td(19feb2020) // Shoule be 2
{txt}
     {c TLC}{hline 10}{c TRC}
     {c |} {res}TotRe~00 {txt}{c |}
     {c LT}{hline 10}{c RT}
 29. {c |} {res}       0 {txt}{c |}
     {c BLC}{hline 10}{c BRC}

{com}. 
. gen DayRecMeRaA00S00 =  TotRecMeRaA00S00[_n] - TotRecMeRaA00S00[_n-1]
{txt}(1 missing value generated)

{com}. 
. label var DayRecMeRaA00S00 "Daily RECovered JOHN"
{txt}
{com}. 
. replace DayRecMeRaA00S00 = TotRecMeRaA00S00 if _j == 1
{txt}(1 real change made)

{com}. 
. replace TotRecMeRaA00S00 = . if date < td(19feb2020)
{txt}(28 real changes made, 28 to missing)

{com}. 
. replace DayRecMeRaA00S00 = . if date < td(19feb2020)
{txt}(28 real changes made, 28 to missing)

{com}. 
. drop _j _merge
{txt}
{com}.                                         
. 
. sort date
{txt}
{com}. 
. save "country JOHN recovered.dta", replace
{txt}file country JOHN recovered.dta saved

{com}. 
. 
. 
. 
. 
. 
. 
. * merge deaths and cases and recovered
. 
. use "country JOHN deaths.dta", clear 
{txt}
{com}. 
. merge 1:1 date using "country JOHN Cases.dta"
{res}
{txt}{col 5}Result{col 38}# of obs.
{col 5}{hline 41}
{col 5}not matched{col 30}{res}               0
{txt}{col 5}matched{col 30}{res}             597{txt}  (_merge==3)
{col 5}{hline 41}

{com}. 
. drop _merge
{txt}
{com}. 
. merge 1:1 date using "country JOHN recovered.dta"
{res}
{txt}{col 5}Result{col 38}# of obs.
{col 5}{hline 41}
{col 5}not matched{col 30}{res}               0
{txt}{col 5}matched{col 30}{res}             597{txt}  (_merge==3)
{col 5}{hline 41}

{com}. 
. drop _merge
{txt}
{com}. 
. *
. 
. * gen cfr
. 
. gen DayCfrMeRaA00S00 = 100 * DayDeaMeRaA00S00 / DayCasMeRaA00S00
{txt}(28 missing values generated)

{com}. 
. label var DayCfrMeRaA00S00 "Daily CFR JOHN"
{txt}
{com}. 
. *
. 
. 
. ****** add obs 01 Jan 2020 to 21 Jan 2020 for better graphing
. 
. 
. expand 22 in 1
{txt}(21 observations created)

{com}. 
. sort date
{txt}
{com}. 
. rename date date_original 
{res}{txt}
{com}. 
. gen date = .
{txt}(618 missing values generated)

{com}. 
. replace date = td(01Jan2020) in 1
{txt}(1 real change made)

{com}. 
. replace date = date[_n-1] + 1 in 2/l
{txt}(617 real changes made)

{com}. 
. format date %tdDDMonCCYY
{txt}
{com}. 
. codebook date

{txt}{hline}
{res}date{right:(unlabeled)}
{txt}{hline}

{col 19}type:  numeric daily date ({res}float{txt})

{col 18}range:  [{res}21915{txt},{res}22532{txt}]{col 55}units:  {res}1
{col 8}{txt}or equivalently:  [{res}01jan2020{txt},{res}09sep2021{txt}]{col 55}units:  {res}days
{col 10}{txt}unique values:  {res}618{col 51}{txt}missing .:  {res}0{txt}/{res}618

{txt}{col 19}mean:{res}{col 26} 22223.5{txt} = {res}04nov2020{txt} (+ 12 hours)
{col 15}std. dev:{res}{col 26} 178.546

{txt}{col 12}percentiles:{col 32}10%{col 42}25%{col 52}50%{col 62}75%{col 72}90%
{res}{col 27}   21976{col 37}   22069{col 47} 22223.5{col 57}   22378{col 67}   22471
{col 26}02mar2020{col 36}03jun2020{col 46}04nov2020{col 56}08apr2021{col 66}10jul2021
{txt}
{com}. 
. drop date_original
{txt}
{com}. 
. order date
{txt}
{com}. 
. 
. * gen prevalent case
. 
. * Daily prevalent cases = Total Cases - (Total Deaths + Total recovered)
. 
. gen DayActMeRaA00S00 = TotCasMeRaA00S00 - TotDeaMeRaA00S00 - TotRecMeRaA00S00
{txt}(49 missing values generated)

{com}. 
. label var DayActMeRaA00S00 "Daily Active JOHN"
{txt}
{com}. 
. 
. 
. * smooth 
. 
. tsset date, daily   
{res}{txt}{col 9}time variable:  {res}{col 25}date, 01Jan2020 to 09Sep2021
{txt}{col 17}delta:  {res}1 day
{txt}
{com}. 
. 
. tssmooth ma DayDeaMeRaA00S00_window = DayDeaMeRaA00S00 if DayDeaMeRaA00S00 >= 0, window(3 1 3)
{txt}The smoother applied was
{res}{p 5 5 5}(1/7)*[x(t-3) + x(t-2) + x(t-1) + 1*x(t) + x(t+1) + x(t+2) + x(t+3)]; x(t)= DayDeaMeRaA00S00 {p_end}
{txt}
{com}. 
. tssmooth ma DayDeaMeSmA00S00 = DayDeaMeRaA00S00_window, weights( 1 2 3 <4> 3 2 1) replace
{txt}The smoother applied was
{res}{p 5 5 5}(1/16)*[1*x(t-3) + 2*x(t-2) + 3*x(t-1) + 4*x(t) + 3*x(t+1) + 2*x(t+2) + ...; x(t)= DayDeaMeRaA00S00_window
{txt}
{smcl}
{com}. 
. label var DayDeaMeSmA00S00 "Daily deaths smooth A00 JOHN"
{txt}
{com}. 
. drop DayDeaMeRaA00S00_window
{txt}
{com}. 
. 
. tssmooth ma DayCasMeRaA00S00_window = DayCasMeRaA00S00 if DayCasMeRaA00S00 >= 0, window(3 1 3)
{txt}The smoother applied was
{res}{p 5 5 5}(1/7)*[x(t-3) + x(t-2) + x(t-1) + 1*x(t) + x(t+1) + x(t+2) + x(t+3)]; x(t)= DayCasMeRaA00S00 {p_end}
{txt}
{com}. 
. tssmooth ma DayCasMeSmA00S00 = DayCasMeRaA00S00_window, weights( 1 2 3 <4> 3 2 1) replace
{txt}The smoother applied was
{res}{p 5 5 5}(1/16)*[1*x(t-3) + 2*x(t-2) + 3*x(t-1) + 4*x(t) + 3*x(t+1) + 2*x(t+2) + ...; x(t)= DayCasMeRaA00S00_window
{txt}
{smcl}
{com}. 
. label var DayCasMeSmA00S00 "Daily cases smooth A00 JOHN"
{txt}
{com}. 
. drop DayCasMeRaA00S00_window
{txt}
{com}. 
. tsset, clear
{txt}
{com}. 
. 
. 
. **************
. 
. * graphs
. 
. ssc install grstyle, replace
{txt}checking {hilite:grstyle} consistency and verifying not already installed...
all files already exist and are up to date.

{com}. 
. grstyle init
{res}{txt}
{com}. 
. grstyle color background white
{txt}
{com}. 
. 
. 
. 
. * daily deaths
. 
. 
. * adjust x axis ticks from Jan 2020 to this month and avoid globals
. forval i = 1(1)12 {c -(}
{txt}  2{com}.         local date2020 = mdy(`i', 1, 2020)
{txt}  3{com}.         local dates2020 `dates2020' `date2020'
{txt}  4{com}. {c )-}
{txt}
{com}. local wanted : di %tdNN daily("$S_DATE", "DMY")
{res}{txt}
{com}. forval i = 1(1)`wanted' {c -(}
{txt}  2{com}.         local date2021 = mdy(`i', 1, 2021)
{txt}  3{com}.         local dates2021 `dates2021' `date2021'
{txt}  4{com}. {c )-}
{txt}
{com}. *
. 
. 
. 
. twoway ///
> (line DayDeaMeRaA00S00 date, sort lcolor(black) lwidth(medium)) /// 1 "JOHN raw"
> (line DayDeaMeSmA00S00 date, sort lcolor(cyan*1.2) lwidth(thick)) /// 2 "JOHN smooth"
> , xtitle(Date) xlabel(`dates2020' `dates2021', format(%tdYY-NN-DD) labsize(small)) xlabel(, grid) xlabel(, grid) ///
> xlabel(, angle(forty_five)) ylabel(, format(%9.0fc) labsize(small))  ylabel(, labsize(small) angle(horizontal)) ///
> ytitle(Daily deaths) title("COVID-19 daily deaths, $country, Johns Hopkins", size(medium)) ///
> xscale(lwidth(vthin) lcolor(gray*.2)) yscale(lwidth(vthin) lcolor(gray*.2)) legend(region(lcolor(none))) legend(bexpand) ///
> legend(order(1 "raw" 2 "smooth") size(small) row(1)) 
{res}{txt}
{com}. 
. graph save "graph 1 COVID-19 daily deaths, $country, Johns Hopkins.gph", replace
{res}{txt}(file graph 1 COVID-19 daily deaths, Iran, Johns Hopkins.gph saved)

{com}. graph export "graph 1 COVID-19 daily deaths, $country, Johns Hopkins.pdf", replace
{txt}(file /Users/farshadpourmalek/Downloads/covir2-main/20210910/code/JOHN/graph 1 COVID-19 daily deaths, Iran, Johns Hopkins.pdf written in PDF format)

{com}. 
. 
. 
. * daily cases 
. 
. 
. forval i = 1(1)12 {c -(}
{txt}  2{com}.         local date2020 = mdy(`i', 1, 2020)
{txt}  3{com}.         local dates2020 `dates2020' `date2020'
{txt}  4{com}. {c )-}
{txt}
{com}. local wanted : di %tdNN daily("$S_DATE", "DMY")
{res}{txt}
{com}. forval i = 1(1)`wanted' {c -(}
{txt}  2{com}.         local date2021 = mdy(`i', 1, 2021)
{txt}  3{com}.         local dates2021 `dates2021' `date2021'
{txt}  4{com}. {c )-}
{txt}
{com}. *
. 
. 
. twoway ///
> (line DayCasMeRaA00S00 date, sort lcolor(black) lwidth(medium)) /// 1 "JOHN raw"
> (line DayCasMeSmA00S00 date, sort lcolor(cyan*1.2) lwidth(thick)) /// 2 "JOHN smooth"
> , xtitle(Date) xlabel(`dates2020' `dates2021', format(%tdYY-NN-DD) labsize(small)) xlabel(, grid) xlabel(, grid) ///
> xlabel(, angle(forty_five)) ylabel(, format(%9.0fc) labsize(small))  ylabel(, labsize(small) angle(horizontal)) ///
> ytitle(Daily cases) title("COVID-19 daily cases, $country, Johns Hopkins", size(medium)) ///
> xscale(lwidth(vthin) lcolor(gray*.2)) yscale(lwidth(vthin) lcolor(gray*.2)) legend(region(lcolor(none))) legend(bexpand) ///
> legend(order(1 "raw" 2 "smooth") size(small) row(1)) 
{res}{txt}
{com}. 
. graph save "graph 2 COVID-19 daily cases, $country, Johns Hopkins.gph", replace
{res}{txt}(file graph 2 COVID-19 daily cases, Iran, Johns Hopkins.gph saved)

{com}. graph export "graph 2 COVID-19 daily cases, $country, Johns Hopkins.pdf", replace
{txt}(file /Users/farshadpourmalek/Downloads/covir2-main/20210910/code/JOHN/graph 2 COVID-19 daily cases, Iran, Johns Hopkins.pdf written in PDF format)

{com}. 
. 
. 
. 
. * total deaths
. 
. forval i = 1(1)12 {c -(}
{txt}  2{com}.         local date2020 = mdy(`i', 1, 2020)
{txt}  3{com}.         local dates2020 `dates2020' `date2020'
{txt}  4{com}. {c )-}
{txt}
{com}. local wanted : di %tdNN daily("$S_DATE", "DMY")
{res}{txt}
{com}. forval i = 1(1)`wanted' {c -(}
{txt}  2{com}.         local date2021 = mdy(`i', 1, 2021)
{txt}  3{com}.         local dates2021 `dates2021' `date2021'
{txt}  4{com}. {c )-}
{txt}
{com}. *
. 
. 
. twoway ///
> (line TotDeaMeRaA00S00 date, sort lcolor(black)) ///
> , xtitle(Date) xlabel(`dates2020' `dates2021', format(%tdYY-NN-DD) labsize(small)) xlabel(, grid) xlabel(, grid) ///
> xlabel(, angle(forty_five)) ylabel(, format(%9.0fc) labsize(small))  ylabel(, labsize(small) angle(horizontal)) ///
> ytitle(Total deaths) title("COVID-19 total deaths, $country, Johns Hopkins", size(medium)) ///
> xscale(lwidth(vthin) lcolor(gray*.2)) yscale(lwidth(vthin) lcolor(gray*.2)) legend(region(lcolor(none))) legend(bexpand) 
{res}{txt}
{com}. 
. graph save "graph 3 COVID-19 total deaths, $country, Johns Hopkins.gph", replace
{res}{txt}(file graph 3 COVID-19 total deaths, Iran, Johns Hopkins.gph saved)

{com}. graph export "graph 3 COVID-19 total deaths, $country, Johns Hopkins.pdf", replace
{txt}(file /Users/farshadpourmalek/Downloads/covir2-main/20210910/code/JOHN/graph 3 COVID-19 total deaths, Iran, Johns Hopkins.pdf written in PDF format)

{com}. 
. 
. 
. 
. * total cases 
. 
. forval i = 1(1)12 {c -(}
{txt}  2{com}.         local date2020 = mdy(`i', 1, 2020)
{txt}  3{com}.         local dates2020 `dates2020' `date2020'
{txt}  4{com}. {c )-}
{txt}
{com}. local wanted : di %tdNN daily("$S_DATE", "DMY")
{res}{txt}
{com}. forval i = 1(1)`wanted' {c -(}
{txt}  2{com}.         local date2021 = mdy(`i', 1, 2021)
{txt}  3{com}.         local dates2021 `dates2021' `date2021'
{txt}  4{com}. {c )-}
{txt}
{com}. *
. 
. 
. twoway ///
> (line TotCasMeRaA00S00 date, sort lcolor(black)) ///
> , xtitle(Date) xlabel(`dates2020' `dates2021', format(%tdYY-NN-DD) labsize(small)) xlabel(, grid) xlabel(, grid) ///
> xlabel(, angle(forty_five)) ylabel(, format(%9.0fc) labsize(small))  ylabel(, labsize(small) angle(horizontal)) ///
> ytitle(Total cases) title("COVID-19 total cases, $country, Johns Hopkins", size(medium)) ///
> xscale(lwidth(vthin) lcolor(gray*.2)) yscale(lwidth(vthin) lcolor(gray*.2)) legend(region(lcolor(none))) legend(bexpand) 
{res}{txt}
{com}. 
. graph save "graph 4 COVID-19 total cases, $country, Johns Hopkins.gph", replace
{res}{txt}(file graph 4 COVID-19 total cases, Iran, Johns Hopkins.gph saved)

{com}. graph export "graph 4 COVID-19 total cases, $country, Johns Hopkins.pdf", replace
{txt}(file /Users/farshadpourmalek/Downloads/covir2-main/20210910/code/JOHN/graph 4 COVID-19 total cases, Iran, Johns Hopkins.pdf written in PDF format)

{com}. 
. 
. 
. 
. 
. * daily cfr 
. 
. 
. forval i = 1(1)12 {c -(}
{txt}  2{com}.         local date2020 = mdy(`i', 1, 2020)
{txt}  3{com}.         local dates2020 `dates2020' `date2020'
{txt}  4{com}. {c )-}
{txt}
{com}. local wanted : di %tdNN daily("$S_DATE", "DMY")
{res}{txt}
{com}. forval i = 1(1)`wanted' {c -(}
{txt}  2{com}.         local date2021 = mdy(`i', 1, 2021)
{txt}  3{com}.         local dates2021 `dates2021' `date2021'
{txt}  4{com}. {c )-}
{txt}
{com}. *
. 
. 
. 
. twoway ///
> (line DayCfrMeRaA00S00 date, sort lcolor(black)) ///
> , xtitle(Date) xlabel(`dates2020' `dates2021', format(%tdYY-NN-DD) labsize(small)) xlabel(, grid) xlabel(, grid) ///
> xlabel(, angle(forty_five)) ylabel(, format(%9.0fc) labsize(small))  ylabel(, labsize(small) angle(horizontal)) ///
> ytitle(Daily CFR) title("COVID-19 daily CFR, $country, Johns Hopkins", size(medium)) ///
> xscale(lwidth(vthin) lcolor(gray*.2)) yscale(lwidth(vthin) lcolor(gray*.2)) legend(region(lcolor(none))) legend(bexpand) 
{res}{txt}
{com}. 
. graph save "graph 5 COVID-19 daily CFR, $country, Johns Hopkins.gph", replace
{res}{txt}(file graph 5 COVID-19 daily CFR, Iran, Johns Hopkins.gph saved)

{com}. graph export "graph 5 COVID-19 daily CFR, $country, Johns Hopkins.pdf", replace
{txt}(file /Users/farshadpourmalek/Downloads/covir2-main/20210910/code/JOHN/graph 5 COVID-19 daily CFR, Iran, Johns Hopkins.pdf written in PDF format)

{com}. 
. 
. 
. 
. 
. * daily cfr 2021
. 
. 
. forval i = 1(1)12 {c -(}
{txt}  2{com}.         local date2020 = mdy(`i', 1, 2020)
{txt}  3{com}.         local dates2020 `dates2020' `date2020'
{txt}  4{com}. {c )-}
{txt}
{com}. local wanted : di %tdNN daily("$S_DATE", "DMY")
{res}{txt}
{com}. forval i = 1(1)`wanted' {c -(}
{txt}  2{com}.         local date2021 = mdy(`i', 1, 2021)
{txt}  3{com}.         local dates2021 `dates2021' `date2021'
{txt}  4{com}. {c )-}
{txt}
{com}. *
. 
. 
. 
. twoway ///
> (line DayCfrMeRaA00S00 date, sort lcolor(black)) ///
> if date >= td(01jan2021) ///
> , xtitle(Date) xlabel(, format(%tdYY-NN-DD) labsize(small)) xlabel(, grid) xlabel(, grid) ///
> xlabel(, angle(forty_five)) ylabel(, format(%9.1fc) labsize(small))  ylabel(, labsize(small) angle(horizontal)) ///
> ytitle(Daily CFR) title("COVID-19 daily CFR, $country, Johns Hopkins", size(medium)) ///
> xscale(lwidth(vthin) lcolor(gray*.2)) yscale(lwidth(vthin) lcolor(gray*.2)) legend(region(lcolor(none))) legend(bexpand) ///
> subtitle("after 2021-01-01", size(small))
{res}{txt}
{com}. 
. graph save "graph 6 COVID-19 daily CFR, $country, Johns Hopkins, 2021.gph", replace
{res}{txt}(file graph 6 COVID-19 daily CFR, Iran, Johns Hopkins, 2021.gph saved)

{com}. graph export "graph 6 COVID-19 daily CFR, $country, Johns Hopkins, 2021.pdf", replace
{txt}(file /Users/farshadpourmalek/Downloads/covir2-main/20210910/code/JOHN/graph 6 COVID-19 daily CFR, Iran, Johns Hopkins, 2021.pdf written in PDF format)

{com}. 
. 
. 
. 
. 
. * visualize timing of deaths and cases peaks
. 
. summ DayDeaMeRaA00S00 

{txt}    Variable {c |}        Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 57}
DayDeaMeR~00 {c |}{res}        569    198.4798    149.6178          0        709
{txt}
{com}. gen DayDeMMeRaA00S00 = r(mean)
{txt}
{com}. label var DayDeMMeRaA00S00 "Daily deaths mean JOHN DayDeM"
{txt}
{com}. 
. summ DayCasMeRaA00S00 

{txt}    Variable {c |}        Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 57}
DayCasMeR~00 {c |}{res}        569    9205.271    9502.809          2      50228
{txt}
{com}. gen DayCaMMeRaA00S00 = r(mean)
{txt}
{com}. label var DayCaMMeRaA00S00 "Daily cases mean JOHN DayCaM"
{txt}
{com}. 
. gen DayCbDMeRaA00S00 = DayCaMMeRaA00S00 / DayDeMMeRaA00S00
{txt}
{com}. label var DayCbDMeRaA00S00 "Daily cases mean div by daily deaths mean JOHN DayCbD"
{txt}
{com}. summ DayCbDMeRaA00S00

{txt}    Variable {c |}        Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 57}
DayCbDMeR~00 {c |}{res}        618    46.37888           0   46.37888   46.37888
{txt}
{com}. 
. gen DayDeaMeRaA00multip = DayDeaMeRaA00S00 * DayCbDMeRaA00S00 
{txt}(49 missing values generated)

{com}. label var DayDeaMeRaA00multip "Daily deaths scaled (times means of cases by deaths) only for visualization JOHN"
{txt}
{com}. summ DayDeaMeRaA00multip

{txt}    Variable {c |}        Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 57}
DayDeaMeRa~p {c |}{res}        569    9205.271    6939.106          0   32882.63
{txt}
{com}. 
. 
. 
. twoway ///
> (line DayCasMeRaA00S00 date, sort lcolor(blue)) ///
> (line DayDeaMeRaA00S00 date, sort lcolor(red)) ///
> (line DayDeaMeRaA00multip date, sort lpattern(tight_dot) lcolor(red)) ///
> if date > td(01jan2020)  /// & date < td(28feb2021) & loc_grand_name == "$country"
> , xtitle(Date) xlabel(#14, format(%tdYY-NN-DD) labsize(small)) xlabel(, grid) xlabel(, grid) ///
> xlabel(, angle(forty_five)) ylabel(, format(%9.0fc) labsize(small))  ylabel(, labsize(small) angle(horizontal)) ///
> ytitle(Daily cases and deaths) title("COVID-19 daily cases and deaths, $country, Johns Hopkins", size(medium)) ///
> xscale(lwidth(vthin) lcolor(gray*.2)) yscale(lwidth(vthin) lcolor(gray*.2)) legend(region(lcolor(none)))  ///
> legend(order(1 "Daily cases" 2 "Daily deaths" 3 "Daily deaths scaled for visualization only")) ///
> note("Daily deaths scaled (times means of cases by deaths) only for visualization JOHN") ///
> subtitle("comparison of timing of peaks", size(small))
{res}{txt}
{com}. 
. graph save "graph 7 COVID-19 daily deaths and cases timing, $country, Johns Hopkins.gph", replace
{res}{txt}(file graph 7 COVID-19 daily deaths and cases timing, Iran, Johns Hopkins.gph saved)

{com}. graph export "graph 7 COVID-19 daily deaths and cases timing, $country, Johns Hopkins.pdf", replace
{txt}(file /Users/farshadpourmalek/Downloads/covir2-main/20210910/code/JOHN/graph 7 COVID-19 daily deaths and cases timing, Iran, Johns Hopkins.pdf written in PDF format)

{com}. 
. 
. 
. 
. 
. * daily recovered
. 
. 
. * adjust x axis ticks from Jan 2020 to this month and avoid globals
. forval i = 1(1)12 {c -(}
{txt}  2{com}.         local date2020 = mdy(`i', 1, 2020)
{txt}  3{com}.         local dates2020 `dates2020' `date2020'
{txt}  4{com}. {c )-}
{txt}
{com}. local wanted : di %tdNN daily("$S_DATE", "DMY")
{res}{txt}
{com}. forval i = 1(1)`wanted' {c -(}
{txt}  2{com}.         local date2021 = mdy(`i', 1, 2021)
{txt}  3{com}.         local dates2021 `dates2021' `date2021'
{txt}  4{com}. {c )-}
{txt}
{com}. *
. 
. 
. 
. twoway ///
> (line DayRecMeRaA00S00 date, sort lcolor(black)) ///
> , xtitle(Date) xlabel(`dates2020' `dates2021', format(%tdYY-NN-DD) labsize(small)) xlabel(, grid) xlabel(, grid) ///
> xlabel(, angle(forty_five)) ylabel(, format(%9.0fc) labsize(small))  ylabel(, labsize(small) angle(horizontal)) ///
> ytitle(Daily recovered) title("COVID-19 daily recovered, $country, Johns Hopkins", size(medium)) ///
> xscale(lwidth(vthin) lcolor(gray*.2)) yscale(lwidth(vthin) lcolor(gray*.2)) legend(region(lcolor(none))) legend(bexpand) 
{res}{txt}
{com}. 
. graph save "graph 8 COVID-19 daily recovered, $country, Johns Hopkins.gph", replace
{res}{txt}(file graph 8 COVID-19 daily recovered, Iran, Johns Hopkins.gph saved)

{com}. graph export "graph 8 COVID-19 daily recovered, $country, Johns Hopkins.pdf", replace
{txt}(file /Users/farshadpourmalek/Downloads/covir2-main/20210910/code/JOHN/graph 8 COVID-19 daily recovered, Iran, Johns Hopkins.pdf written in PDF format)

{com}. 
. 
. 
. 
. * daily active
. 
. 
. * adjust x axis ticks from Jan 2020 to this month and avoid globals
. forval i = 1(1)12 {c -(}
{txt}  2{com}.         local date2020 = mdy(`i', 1, 2020)
{txt}  3{com}.         local dates2020 `dates2020' `date2020'
{txt}  4{com}. {c )-}
{txt}
{com}. local wanted : di %tdNN daily("$S_DATE", "DMY")
{res}{txt}
{com}. forval i = 1(1)`wanted' {c -(}
{txt}  2{com}.         local date2021 = mdy(`i', 1, 2021)
{txt}  3{com}.         local dates2021 `dates2021' `date2021'
{txt}  4{com}. {c )-}
{txt}
{com}. *
. 
. 
. 
. twoway ///
> (line DayActMeRaA00S00 date, sort lcolor(black)) ///
> , xtitle(Date) xlabel(`dates2020' `dates2021', format(%tdYY-NN-DD) labsize(small)) xlabel(, grid) xlabel(, grid) ///
> xlabel(, angle(forty_five)) ylabel(, format(%9.0fc) labsize(small))  ylabel(, labsize(small) angle(horizontal)) ///
> ytitle(Daily active) title("COVID-19 daily active cases, $country, Johns Hopkins", size(medium)) ///
> xscale(lwidth(vthin) lcolor(gray*.2)) yscale(lwidth(vthin) lcolor(gray*.2)) legend(region(lcolor(none))) legend(bexpand) 
{res}{txt}
{com}. 
. graph save "graph 9 COVID-19 daily active, $country, Johns Hopkins.gph", replace
{res}{txt}(file graph 9 COVID-19 daily active, Iran, Johns Hopkins.gph saved)

{com}. graph export "graph 9 COVID-19 daily active, $country, Johns Hopkins.pdf", replace
{txt}(file /Users/farshadpourmalek/Downloads/covir2-main/20210910/code/JOHN/graph 9 COVID-19 daily active, Iran, Johns Hopkins.pdf written in PDF format)

{com}. 
. 
. ***
. 
. 
. qui compress
{txt}
{com}. 
. sort date loc_grand_name
{txt}
{com}. 
. 
. save "country JOHN.dta", replace
{txt}file country JOHN.dta saved

{com}. 
. 
. 
. view "log country JOHN.smcl"
{txt}
{com}. 
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/Users/farshadpourmalek/Downloads/covir2-main/20210910/code/JOHN/log country JOHN.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res}10 Sep 2021, 16:51:05
{txt}{.-}
{smcl}
{txt}{sf}{ul off}